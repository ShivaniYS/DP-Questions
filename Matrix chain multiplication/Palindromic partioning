# https://practice.geeksforgeeks.org/problems/palindromic-patitioning4845/1
//{ Driver Code Starts
// Initial Template for c++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution{
public:
    int t[501][501];
    bool ispalindrome(string &s,int i,int j){
        while(i<j){
            if(s[i] != s[j]){
                return false;
            }
            else{
                i++;
                j--;
            }
        }
        return true;
    }
    int solve(string&s,int i,int j){
        if(i>=j){
            return 0;
        }
        if(t[i][j] != -1)return t[i][j];
        if(ispalindrome(s,i,j)) return 0;
        int ans =INT_MAX;
        for(int k=i;k<=j-1;k++){
            int temp = solve(s,i,k) + solve(s,k+1,j)+1;
            ans = min(ans,temp);
        }
        return t[i][j] = ans;
    }
    int palindromicPartition(string str)
    {
        // code here
        memset(t,-1,sizeof(t));
        return solve(str,0,str.length()-1);
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        string str;
        cin>>str;
        
        Solution ob;
        cout<<ob.palindromicPartition(str)<<"\n";
    }
    return 0;
}
// } Driver Code Ends
